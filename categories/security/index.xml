<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security on C0m3ct-安全笔记</title>
    <link>https://c0m3ct.github.io/categories/security/</link>
    <description>Recent content in security on C0m3ct-安全笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 Mar 2021 22:07:36 +0800</lastBuildDate><atom:link href="https://c0m3ct.github.io/categories/security/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>第四章：权限提升分析及防御</title>
      <link>https://c0m3ct.github.io/post/security/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E5%88%86%E6%9E%90%E5%8F%8A%E9%98%B2%E5%BE%A1/</link>
      <pubDate>Sun, 07 Mar 2021 22:07:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87%E5%88%86%E6%9E%90%E5%8F%8A%E9%98%B2%E5%BE%A1/</guid>
      <description>前言 在windows中，权限大概分为如下四种： User：普通用户权限，系统中最安全的权限。（分配给该组的默认权限不允许成员修改操作系统的设置</description>
    </item>
    
    <item>
      <title>第三章：隐藏通信隧道技术</title>
      <link>https://c0m3ct.github.io/post/security/%E9%9A%90%E8%97%8F%E9%80%9A%E4%BF%A1%E9%9A%A7%E9%81%93%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Sun, 07 Feb 2021 22:07:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E9%9A%90%E8%97%8F%E9%80%9A%E4%BF%A1%E9%9A%A7%E9%81%93%E6%8A%80%E6%9C%AF/</guid>
      <description>基础知识 概述 下面所说的隧道，就是一种绕过端口屏蔽的通信方式，其实也就是使用不同协议的通信，以达到绕过防火墙的目的。常见的隧道如下： 网络层：I</description>
    </item>
    
    <item>
      <title>第二章：内网信息收集</title>
      <link>https://c0m3ct.github.io/post/security/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</link>
      <pubDate>Sat, 23 Jan 2021 16:07:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</guid>
      <description>概述 当进入内网后，面对的是一片黑暗森林。我们需要对当前网络环境进行判断，涉及如下几个方面： 我是谁：对当前机器角色的判断。 这是哪：对当前机器所</description>
    </item>
    
    <item>
      <title>第一章：内网渗透基础</title>
      <link>https://c0m3ct.github.io/post/security/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 19 Jan 2021 22:07:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%9F%BA%E7%A1%80/</guid>
      <description>工作组 将不同的计算机按功能或部门分别列入不同的 工作组 ，以方便管理。 默认所有计算机都处在名为 WORKGROUP 的工作组中。 工作组资源管理模式适合于网络中计算机</description>
    </item>
    
    <item>
      <title>XXE利用</title>
      <link>https://c0m3ct.github.io/post/security/xxe%E5%88%A9%E7%94%A8/</link>
      <pubDate>Sun, 17 Jan 2021 12:28:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/xxe%E5%88%A9%E7%94%A8/</guid>
      <description>有回显XXE 引用外部实体 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt; &amp;lt;!DOCTYPE foo [ &amp;lt;!ELEMENT foo ANY &amp;gt; &amp;lt;!ENTITY s1 SYSTEM &amp;quot;file:///etc/passwd&amp;quot; &amp;gt; ]&amp;gt; &amp;lt;foo&amp;gt;&amp;amp;s1;&amp;lt;/foo&amp;gt; 引用公共实体 &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt; &amp;lt;!DOCTYPE root PUBLIC &amp;quot;test&amp;quot; &amp;quot;file:///etc/passwd&amp;quot;&amp;gt; &amp;lt;root&amp;gt;&amp;amp;test;&amp;lt;/root&amp;gt; 引用参数实体 当文件含有特殊符号的时候，如&amp;amp</description>
    </item>
    
    <item>
      <title>渗透笔记</title>
      <link>https://c0m3ct.github.io/post/security/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 01 Jan 2021 21:28:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/</guid>
      <description>获取shell后 开启清屏： export TERM=screen # 赋值xterm也可以 查看sudo权限： sudo -l 尝试生成公钥文件到用户目录下的 .ssh 下： echo &amp;quot;xxxx&amp;quot; &amp;gt; /home/p1n93r/.ssh/authorized_keys ，然后就可以免密ssh</description>
    </item>
    
    <item>
      <title>sqli_labs通关</title>
      <link>https://c0m3ct.github.io/post/security/sqli-labs%E9%80%9A%E5%85%B3/</link>
      <pubDate>Sat, 28 Nov 2020 20:04:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/sqli-labs%E9%80%9A%E5%85%B3/</guid>
      <description>前置知识 常用函数 version()：mysql版本； user()：当前数据库链接用户名； database()：当前链接数据库名； @@data</description>
    </item>
    
    <item>
      <title>upload_labs通关</title>
      <link>https://c0m3ct.github.io/post/security/upload_labs%E9%80%9A%E5%85%B3/</link>
      <pubDate>Sun, 08 Nov 2020 13:04:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/upload_labs%E9%80%9A%E5%85%B3/</guid>
      <description>第一关 源码 function checkFile() { var file = document.getElementsByName(&#39;upload_file&#39;)[0].value; if (file == null || file == &amp;quot;&amp;quot;) { alert(&amp;quot;请选择要上传的文件!&amp;quot;); return false; } //定义允许上传的文件类型 var allow_ext =</description>
    </item>
    
    <item>
      <title>低于1.5.0版本shiro身份绕过漏洞分析</title>
      <link>https://c0m3ct.github.io/post/security/%E4%BD%8E%E4%BA%8E1.5.0%E7%89%88%E6%9C%ACshiro%E8%BA%AB%E4%BB%BD%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</link>
      <pubDate>Fri, 06 Nov 2020 18:35:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/%E4%BD%8E%E4%BA%8E1.5.0%E7%89%88%E6%9C%ACshiro%E8%BA%AB%E4%BB%BD%E7%BB%95%E8%BF%87%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</guid>
      <description>测试环境 shiro 1.4.0 springboot shiro过滤器配置如下： @Bean public ShiroFilterFactoryBean shiroFilterFactoryBean(@Qualifier(&amp;quot;defaultWebSecurityManager&amp;quot;) DefaultWebSecurityManager defaultWebSecurityManager) { ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean(); //设置安全管理器 shiroFilterFactoryBean.setSecurityManager(defaultWebSecurityManager); //设置未认证(登录)时，访问需要认证的资源时跳转的页面</description>
    </item>
    
    <item>
      <title>CewlKid: 1</title>
      <link>https://c0m3ct.github.io/post/security/cewlkid/</link>
      <pubDate>Wed, 23 Sep 2020 19:51:36 +0800</pubDate>
      
      <guid>https://c0m3ct.github.io/post/security/cewlkid/</guid>
      <description>介绍 An intermediate boot2root. The name is a hint. The start is CTF but the end is real world and worth the effort. Created in Virtualbox. Goal: Get the root flag. 地址：CewlKid: 1 virtualbox网络设置 首先需要保证攻击机和靶子</description>
    </item>
    
  </channel>
</rss>
